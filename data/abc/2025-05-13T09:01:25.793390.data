environ({'ALLUSERSPROFILE': 'C:\\ProgramData', 'APPDATA': 'C:\\Users\\ADMIN\\AppData\\Roaming', 'ASL.LOG': 'Destination=file', 'CHOCOLATEYINSTALL': 'C:\\ProgramData\\chocolatey', 'CHOCOLATEYLASTPATHUPDATE': '133727422506302726', 'CHROME_CRASHPAD_PIPE_NAME': '\\\\.\\pipe\\crashpad_424_CNSCIJNKCHDGPLJG', 'COMMONPROGRAMFILES': 'C:\\Program Files\\Common Files', 'COMMONPROGRAMFILES(X86)': 'C:\\Program Files (x86)\\Common Files', 'COMMONPROGRAMW6432': 'C:\\Program Files\\Common Files', 'COMPUTERNAME': 'LWD3C', 'COMSPEC': 'C:\\WINDOWS\\system32\\cmd.exe', 'CONDA_PROMPT_MODIFIER': 'False', 'CUDA_PATH': 'C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.4', 'CUDA_PATH_V12_4': 'C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.4', 'CURSOR_TRACE_ID': '6aff9aa0ce2a40c19b7f547d227575ad', 'DRIVERDATA': 'C:\\Windows\\System32\\Drivers\\DriverData', 'EFC_28576_1262719628': '1', 'EFC_28576_1592913036': '1', 'EFC_28576_2283032206': '1', 'EFC_28576_2775293581': '1', 'EFC_28576_3789132940': '1', 'HOMEDRIVE': 'C:', 'HOMEPATH': '\\Users\\ADMIN', 'LOCALAPPDATA': 'C:\\Users\\ADMIN\\AppData\\Local', 'LOGONSERVER': '\\\\LWD3C', 'MONGO_URI': 'mongodb+srv://lwd3c:nghiencuukhoahoc@cluster1.smjtg.mongodb.net/?retryWrites=true&w=majority&appName=Cluster', 'NUMBER_OF_PROCESSORS': '12', 'ONEDRIVE': 'C:\\Users\\ADMIN\\OneDrive', 'ORIGINAL_XDG_CURRENT_DESKTOP': 'undefined', 'OS': 'Windows_NT', 'PATH': 'c:\\Users\\ADMIN\\.cursor\\extensions\\ms-python.python-2024.12.3-win32-x64\\python_files\\deactivate\\powershell;D:\\VSCode\\CEH\\ceh\\Scripts;c:\\Users\\ADMIN\\.cursor\\extensions\\ms-python.python-2024.12.3-win32-x64\\python_files\\deactivate\\powershell;D:\\VSCode\\CEH\\ceh\\Scripts;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.4\\bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.4\\libnvvp;C:\\Program Files\\Common Files\\Oracle\\Java\\javapath;C:\\Program Files (x86)\\VMware\\VMware Workstation\\bin\\;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files\\NVIDIA Corporation\\NVIDIA NvDLISR;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\Microsoft SQL Server\\150\\Tools\\Binn\\;C:\\Program Files\\Microsoft SQL Server\\Client SDK\\ODBC\\170\\Tools\\Binn\\;C:\\Users\\Public\\Downloads;C:\\Users\\Public\\Downloads\\ffmpeg-master-latest-win64-gpl\\ffmpeg-master-latest-win64-gpl\\bin;C:\\Program Files\\Git\\cmd;D:\\MinGW\\bin;C:\\Users\\ADMIN\\AppData\\Local\\bin\\NASM;D:\\Download;C:\\ProgramData\\chocolatey\\bin;C:\\Program Files\\Cppcheck;C:\\Program Files\\dotnet\\;C:\\Users\\ADMIN\\AppData\\Local\\Programs\\Python\\Python39\\;C:\\Users\\ADMIN\\AppData\\Local\\Programs\\Python\\Python39\\Scripts\\;C:\\Program Files\\nodejs\\node_modules\\npm;C:\\Program Files\\nodejs\\;C:\\Program Files (x86)\\Microsoft SQL Server\\160\\DTS\\Binn\\;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files\\NVIDIA Corporation\\Nsight Compute 2024.1.0\\;C:\\Program Files (x86)\\Microsoft SQL Server\\160\\Tools\\Binn\\;C:\\Program Files\\Microsoft SQL Server\\160\\Tools\\Binn\\;C:\\Program Files\\Microsoft SQL Server\\160\\DTS\\Binn\\;D:\\MongoDB\\Tools\\100\\bin;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Users\\ADMIN\\AppData\\Local\\Programs\\oh-my-posh\\bin\\;D:\\Anaconda3;D:\\Anaconda3\\Library\\mingw-w64\\bin;D:\\Anaconda3\\Library\\usr\\bin;D:\\Anaconda3\\Library\\bin;D:\\Anaconda3\\Scripts;C:\\Users\\ADMIN\\AppData\\Local\\Programs\\Python\\Python39\\Scripts\\;C:\\Users\\ADMIN\\AppData\\Local\\Programs\\Python\\Python39\\;C:\\Users\\ADMIN\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\ADMIN\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;D:\\MinGW\\bin;D:\\Download\\nasm-2.16.03\\;C:\\Irvine\\Irvine32.inc;C:\\Users\\ADMIN\\.dotnet\\tools;C:\\Users\\ADMIN\\AppData\\Roaming\\npm;C:\\Users\\ADMIN\\AppData\\Local\\Programs\\superfile\\;C:\\Program Files (x86)\\Nmap;D:\\Cursor\\resources\\app\\bin', 'PATHEXT': '.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL', 'POSH_CURSOR_COLUMN': '1', 'POSH_CURSOR_LINE': '1', 'POSH_INSTALLER': 'winget', 'POSH_SHELL': 'pwsh', 'POSH_SHELL_VERSION': '5.1.26100.3912', 'POSH_THEME': 'C:\\Users\\ADMIN\\AppData\\Local\\Programs\\oh-my-posh\\themes\\kushal.omp.json', 'POSH_THEMES_PATH': 'C:\\Users\\ADMIN\\AppData\\Local\\Programs\\oh-my-posh\\themes\\', 'POWERLINE_COMMAND': 'oh-my-posh', 'PROCESSOR_ARCHITECTURE': 'AMD64', 'PROCESSOR_IDENTIFIER': 'Intel64 Family 6 Model 186 Stepping 2, GenuineIntel', 'PROCESSOR_LEVEL': '6', 'PROCESSOR_REVISION': 'ba02', 'PROGRAMDATA': 'C:\\ProgramData', 'PROGRAMFILES': 'C:\\Program Files', 'PROGRAMFILES(X86)': 'C:\\Program Files (x86)', 'PROGRAMW6432': 'C:\\Program Files', 'PSMODULEPATH': 'C:\\Users\\ADMIN\\OneDrive\\Documents\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules;C:\\Program Files (x86)\\Microsoft SQL Server\\160\\Tools\\PowerShell\\Modules\\', 'PT8HOME': 'D:\\Cisco Packet Tracer 8.2.2', 'PUBLIC': 'C:\\Users\\Public', 'PYENV_VIRTUALENV_DISABLE_PROMPT': '1', 'SESSIONNAME': 'Console', 'SYSTEMDRIVE': 'C:', 'SYSTEMROOT': 'C:\\WINDOWS', 'TEMP': 'C:\\Users\\ADMIN\\AppData\\Local\\Temp', 'TMP': 'C:\\Users\\ADMIN\\AppData\\Local\\Temp', 'USERDOMAIN': 'LWD3C', 'USERDOMAIN_ROAMINGPROFILE': 'LWD3C', 'USERNAME': 'ADMIN', 'USERPROFILE': 'C:\\Users\\ADMIN', 'VIRTUAL_ENV_DISABLE_PROMPT': '1', 'WINDIR': 'C:\\WINDOWS', 'ZES_ENABLE_SYSMAN': '1', 'TERM_PROGRAM': 'vscode', 'TERM_PROGRAM_VERSION': '0.49.6', 'LANG': 'en_US.UTF-8', 'COLORTERM': 'truecolor', 'GIT_ASKPASS': 'd:\\Cursor\\resources\\app\\extensions\\git\\dist\\askpass.sh', 'VSCODE_GIT_ASKPASS_NODE': 'D:\\Cursor\\Cursor.exe', 'VSCODE_GIT_ASKPASS_EXTRA_ARGS': '', 'VSCODE_GIT_ASKPASS_MAIN': 'd:\\Cursor\\resources\\app\\extensions\\git\\dist\\askpass-main.js', 'VSCODE_GIT_IPC_HANDLE': '\\\\.\\pipe\\vscode-git-2b77cb6bcb-sock', 'POSH_SESSION_ID': '46c310d1-cd46-400a-b092-6c255db1125e', 'VIRTUAL_ENV': 'D:\\VSCode\\CEH\\ceh', 'VSCODE_INJECTION': '1'})